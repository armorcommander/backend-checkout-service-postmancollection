{
	"info": {
		"_postman_id": "9a538625-8857-41d8-9e78-ca50285f5131",
		"name": "backend-checkout-service",
		"description": "This collection of tests contains various tests to validate the backend-checkout-service lambda functions\r\n\r\n\r\nNotes:\r\n\r\n1. To set the environment to test go to the \"Variables\" tab in this collection top level folder and set the environment_to_test key to the value of: \r\n\r\n\"localhost:8811\"\r\n\"dev\" \r\n\r\n\r\n2. The Pre-request scripts at the top level folder will then evaluate that collection folder variable and send the request to the correct environment endpoint",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GoogleHomesPromo",
			"item": [
				{
					"name": "Too low of an amount (1-2), does Not Qualify",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e6637fcb-ac33-4435-9fbb-262392011760",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 2\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9459c4e7-2701-4ca3-b751-f04d4c8a7adb",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var numDeals = Math.floor(checkData.item1_quantity / 3);\r",
									"var priceReduction = (checkData.item1_amountTotal-(49.99*numDeals)).toFixed(2);\r",
									"checkData.item1_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exact amount (3), does Qualify",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a983f258-977e-4870-83a5-a61281928788",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 3\r",
									"max120P90 = 3\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "94933662-a792-42e1-8661-48a283902c27",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var numDeals = Math.floor(checkData.item1_quantity / 3);\r",
									"var priceReduction = (checkData.item1_amountTotal-(49.99*numDeals)).toFixed(2);\r",
									"checkData.item1_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Between amounts (4-5), does Qualify for 1 set",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8dfcd959-5948-4740-9573-0b27fd47989e",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 4\r",
									"max120P90 = 5\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7d748480-0425-4df2-9839-ae105932db12",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var numDeals = Math.floor(checkData.item1_quantity / 3);\r",
									"var priceReduction = (checkData.item1_amountTotal-(49.99*numDeals)).toFixed(2);\r",
									"checkData.item1_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Between amounts (7-8), does Qualify for 2 sets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5be1baca-ed2c-4b6a-80f8-0fafecf86496",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 7\r",
									"max120P90 = 8\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c3184c14-0e74-433a-9fa9-54c38ad59dbf",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var numDeals = Math.floor(checkData.item1_quantity / 3);\r",
									"var priceReduction = (checkData.item1_amountTotal-(49.99*numDeals)).toFixed(2);\r",
									"checkData.item1_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Between amounts (1-10), may Qualify for several sets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "89ac6c83-718d-46b6-85af-60b5cea41f72",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 10\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "29ae1bfc-2f9d-43a2-82b7-f9c14388a346",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var numDeals = Math.floor(checkData.item1_quantity / 3);\r",
									"var priceReduction = (checkData.item1_amountTotal-(49.99*numDeals)).toFixed(2);\r",
									"checkData.item1_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "AlexaSpeakerPromo",
			"item": [
				{
					"name": "Too low of an amount (1-3), does Not Qualify",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "278f86ab-50e9-40ea-925f-6ddee9eb280c",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 3\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantityA304SD * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b26665c-6701-4923-9810-cd5287acac6a",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var discount = (checkData.item2_quantity > 3)? .9 : 1;\r",
									"var priceReduction = (checkData.item2_amountTotal*discount).toFixed(2);\r",
									"checkData.item2_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Exact amount (4), does Qualify",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52036dad-8e97-4ac4-8526-fa8faafd19c7",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 4\r",
									"maxA304SD = 4\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantityA304SD * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "83365bba-e15b-4d00-b69c-4772d9abf850",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var discount = (checkData.item2_quantity > 3)? .9 : 1;\r",
									"var priceReduction = (checkData.item2_amountTotal*discount).toFixed(2);\r",
									"checkData.item2_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Between amounts (1-10), may Qualify",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7782a618-89ce-4dc3-9bdf-70fc3f1df27f",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 10\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantityA304SD * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "33ca5150-61a3-4b81-921a-d71722dce1ed",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"var discount = (checkData.item2_quantity > 3)? .9 : 1;\r",
									"var priceReduction = (checkData.item2_amountTotal*discount).toFixed(2);\r",
									"checkData.item2_amountTotal = Number(priceReduction);\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "MackBookPro_RaspberryPiBPromo",
			"item": [
				{
					"name": "Set Raspberry Pi B inventory back to 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e0927792-ea99-42e6-a832-040d8b8b3c6d",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Amount of MacBooks and RaspberryPiB are good (1-2)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a396d8b3-07a3-4f5f-a814-6d0419160692",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 2\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6f6fcbb0-d362-4bbf-9052-b9ec146f57e1",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"\r",
									"// For this test, for every MacBook Pro, an equal amount of \r",
									"// Raspberry Pi B's should be included\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item3 tests (SKU 43N23P \"MackBookPro\")\r",
									"//==================================================================\r",
									"\r",
									"// item3_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[2].id).to.eql(checkData.item3_id);\r",
									"});\r",
									"\r",
									"// item3_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[2].sku).to.eql(checkData.item3_sku);\r",
									"});\r",
									"\r",
									"// item3_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[2].quantity).to.eql(checkData.item3_quantity);\r",
									"});\r",
									"\r",
									"// item3_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[2].amountTotal).to.eql(Number(checkData.item3_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item4 tests (SKU 234234 \"Raspbery Pi B\") \r",
									"//==================================================================\r",
									"\r",
									"// item4_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[3].id).to.eql(checkData.item4_id);\r",
									"});\r",
									"\r",
									"// item4_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[3].sku).to.eql(checkData.item4_sku);\r",
									"});\r",
									"\r",
									"// item4_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[3].quantity).to.eql(checkData.item4_quantity);\r",
									"});\r",
									"\r",
									"// item4_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[3].amountTotal).to.eql(Number(checkData.item4_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"sku\": \"43N23P\",\r\n            \"quantity\": {{quantity43N23P}},\r\n            \"amountTotal\": {{totalAmount43N23P}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Raspberry Pi B inventory back to 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "79dbecd1-cf46-4b6d-b9f7-f18d5ba3d3ee",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Not enough RaspberryPiB inventory  (3)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f3a8ecc4-bdd8-4ae7-a07a-a83b62e84f62",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 3\r",
									"max43N23P = 3\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "375de965-eeb5-4ec5-acd4-519adf92a612",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var cartStatusData = jsonData.Result.cartStatus;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"\r",
									"// For this test, for every MacBook Pro, an equal amount of \r",
									"// Raspberry Pi B's should be included\r",
									"checkData.item4_quantity = 2;\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response CartStatus validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// issue\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.issue).to.eql(true);\r",
									"});\r",
									"\r",
									"// applicationSTatus\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.promotionsStatus[0].qualifiedPromotion).to.eql('FreeRaspberryPiB');\r",
									"});\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item3 tests (SKU 43N23P \"MackBookPro\")\r",
									"//==================================================================\r",
									"\r",
									"// item3_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[2].id).to.eql(checkData.item3_id);\r",
									"});\r",
									"\r",
									"// item3_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[2].sku).to.eql(checkData.item3_sku);\r",
									"});\r",
									"\r",
									"// item3_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[2].quantity).to.eql(checkData.item3_quantity);\r",
									"});\r",
									"\r",
									"// item3_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[2].amountTotal).to.eql(Number(checkData.item3_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item4 tests (SKU 234234 \"Raspbery Pi B\") \r",
									"//==================================================================\r",
									"\r",
									"// item4_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[3].id).to.eql(checkData.item4_id);\r",
									"});\r",
									"\r",
									"// item4_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[3].sku).to.eql(checkData.item4_sku);\r",
									"});\r",
									"\r",
									"// item4_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[3].quantity).to.eql(checkData.item4_quantity);\r",
									"});\r",
									"\r",
									"// item4_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[3].amountTotal).to.eql(Number(checkData.item4_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"sku\": \"43N23P\",\r\n            \"quantity\": {{quantity43N23P}},\r\n            \"amountTotal\": {{totalAmount43N23P}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Raspberry Pi B inventory back to 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c31aa2dc-cac3-470a-bae2-13903cee063f",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Already 1 Raspberry PiB in the shopping cart for the 1 MacBook Pro",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ba58a106-1d3a-45dd-8b8d-b947ce6c1b93",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 234234 \"Raspberry PiB\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity234234 = getRandomInt(max234234, min234234);\r",
									"pm.environment.set('quantity234234', randQuantity234234);\r",
									"\r",
									"var totalAmount234234 = (randQuantity234234 * 30.00).toFixed(2);\r",
									"pm.environment.set('totalAmount234234', totalAmount234234);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity234234,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a7339bb8-a7bc-4935-8d67-273c5cd13eab",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var cartStatusData = jsonData.Result.cartStatus;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"\r",
									"// For this test, for every MacBook Pro, an equal amount of \r",
									"// Raspberry Pi B's should be included\r",
									"// checkData.item4_quantity = 2;\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response CartStatus validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// issue\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.issue).to.eql(false);\r",
									"});\r",
									"\r",
									"// applicationSTatus\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.promotionsStatus[0].qualifiedPromotion).to.eql('FreeRaspberryPiB');\r",
									"});\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item3 tests (SKU 43N23P \"MackBookPro\")\r",
									"//==================================================================\r",
									"\r",
									"// item3_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[2].id).to.eql(checkData.item3_id);\r",
									"});\r",
									"\r",
									"// item3_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[2].sku).to.eql(checkData.item3_sku);\r",
									"});\r",
									"\r",
									"// item3_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[2].quantity).to.eql(checkData.item3_quantity);\r",
									"});\r",
									"\r",
									"// item3_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[2].amountTotal).to.eql(Number(checkData.item3_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item4 tests (SKU 234234 \"Raspbery Pi B\") \r",
									"//==================================================================\r",
									"\r",
									"// item4_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[3].id).to.eql(checkData.item4_id);\r",
									"});\r",
									"\r",
									"// item4_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[3].sku).to.eql(checkData.item4_sku);\r",
									"});\r",
									"\r",
									"// item4_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[3].quantity).to.eql(checkData.item4_quantity);\r",
									"});\r",
									"\r",
									"// item4_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[3].amountTotal).to.eql(Number(checkData.item4_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"sku\": \"43N23P\",\r\n            \"quantity\": {{quantity43N23P}},\r\n            \"amountTotal\": {{totalAmount43N23P}}\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"sku\": \"234234\",\r\n            \"quantity\": {{quantity234234}},\r\n            \"amountTotal\": {{totalAmount234234}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Raspberry Pi B inventory back to 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e15d6ff9-8ff8-4030-86d4-d77ed09b1221",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Additional Raspberry PiB (2) in the shopping cart for the 1 MacBook Pro",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "55b6ac9d-ded1-4b43-8bfd-adf14572ca48",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 1\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 1\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 1\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 2\r",
									"max234234 = 2\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 234234 \"Raspberry PiB\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity234234 = getRandomInt(max234234, min234234);\r",
									"pm.environment.set('quantity234234', randQuantity234234);\r",
									"\r",
									"var totalAmount234234 = (randQuantity234234 * 30.00).toFixed(2);\r",
									"pm.environment.set('totalAmount234234', totalAmount234234);\r",
									"\r",
									"//==================================================================\r",
									"// Creating Generic Object to validate against\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - A304SD Alexa Speaker\r",
									"// item3 - 43N23P MackBookPro\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"A304SD\",\r",
									"    \"item2_quantity\":     randQuantityA304SD,\r",
									"    \"item2_amountTotal\":  totalAmountA304SD,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"43N23P\",\r",
									"    \"item3_quantity\":     randQuantity43N23P,\r",
									"    \"item3_amountTotal\":  totalAmount43N23P,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity234234,\r",
									"    \"item4_amountTotal\":  30.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ffb1507a-4f95-4af7-8777-c3f35b7613ed",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var cartStatusData = jsonData.Result.cartStatus;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"\r",
									"// For this test, for every MacBook Pro, an equal amount of \r",
									"// Raspberry Pi B's should be included\r",
									"// checkData.item4_quantity = 2;\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response CartStatus validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// issue\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.issue).to.eql(false);\r",
									"});\r",
									"\r",
									"// applicationSTatus\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.promotionsStatus[0].qualifiedPromotion).to.eql('FreeRaspberryPiB');\r",
									"});\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item3 tests (SKU 43N23P \"MackBookPro\")\r",
									"//==================================================================\r",
									"\r",
									"// item3_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[2].id).to.eql(checkData.item3_id);\r",
									"});\r",
									"\r",
									"// item3_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[2].sku).to.eql(checkData.item3_sku);\r",
									"});\r",
									"\r",
									"// item3_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[2].quantity).to.eql(checkData.item3_quantity);\r",
									"});\r",
									"\r",
									"// item3_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[2].amountTotal).to.eql(Number(checkData.item3_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item4 tests (SKU 234234 \"Raspbery Pi B\") \r",
									"//==================================================================\r",
									"\r",
									"// item4_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[3].id).to.eql(checkData.item4_id);\r",
									"});\r",
									"\r",
									"// item4_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[3].sku).to.eql(checkData.item4_sku);\r",
									"});\r",
									"\r",
									"// item4_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[3].quantity).to.eql(checkData.item4_quantity);\r",
									"});\r",
									"\r",
									"// item4_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[3].amountTotal).to.eql(Number(checkData.item4_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"sku\": \"43N23P\",\r\n            \"quantity\": {{quantity43N23P}},\r\n            \"amountTotal\": {{totalAmount43N23P}}\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"sku\": \"234234\",\r\n            \"quantity\": {{quantity234234}},\r\n            \"amountTotal\": {{totalAmount234234}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Raspberry Pi B inventory back to 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48c16e63-86a4-41f6-873e-6a52d65e7b89",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "All Promotions Combined",
			"item": [
				{
					"name": "All items between amounts (1-10)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8cb701ca-d232-48a7-a176-23c999c23a63",
								"exec": [
									"//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r",
									"// Setting Min, Max for each SKU to control with testing\r",
									"\r",
									"// Google Home\r",
									"min120P90 = 1\r",
									"max120P90 = 10\r",
									"\r",
									"// MacBook Pro\r",
									"min43N23P = 1\r",
									"max43N23P = 4\r",
									"\r",
									"// Alexa Speaker\r",
									"minA304SD = 1\r",
									"maxA304SD = 10\r",
									"\r",
									"// Raspberry Pi B\r",
									"min234234 = 1\r",
									"max234234 = 1\r",
									"\r",
									"\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Pull in the uuid library\r",
									"var uuid = require('uuid');\r",
									"\r",
									"// Random Integer generator (inclusive of both bounds)\r",
									"function getRandomInt(max, min) {\r",
									"    return Math.floor(Math.random () * (max - min + 1)) + min;\r",
									"}\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"//==================================================================\r",
									"// Creating a random unique, cart Id using a (uuid) value\r",
									"//==================================================================\r",
									"var randomCartId = uuid.v4();\r",
									"postman.setEnvironmentVariable('cartId', randomCartId);\r",
									"\r",
									"// Prices for each sku item\r",
									"//   SKU      1X         2X           3X\r",
									"// 120P90   49.99       99.98       149.97 \r",
									"// 43N23P   5399.99     10799.98    16199.97\r",
									"// A304SD   109.50      219         328.50  \r",
									"// 234234   30.00       60          90\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 120P90 \"Google Homes\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity120P90 = getRandomInt(max120P90, min120P90);\r",
									"pm.environment.set('quantity120P90', randQuantity120P90);\r",
									"\r",
									"var totalAmount120P90 = (randQuantity120P90 * 49.99).toFixed(2);\r",
									"pm.environment.set('totalAmount120P90', totalAmount120P90);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 43N23P \"MacBook Pro\" Test Data\r",
									"//==================================================================\r",
									"var randQuantity43N23P = getRandomInt(max43N23P, min43N23P);\r",
									"pm.environment.set('quantity43N23P', randQuantity43N23P);\r",
									"\r",
									"var totalAmount43N23P = (randQuantity43N23P * 5399.99).toFixed(2);\r",
									"pm.environment.set('totalAmount43N23P', totalAmount43N23P);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU A304SD \"Alexa Speaker\" Test Data\r",
									"//==================================================================\r",
									"var randQuantityA304SD = getRandomInt(maxA304SD, minA304SD);\r",
									"pm.environment.set('quantityA304SD', randQuantityA304SD);\r",
									"\r",
									"var totalAmountA304SD = (randQuantity43N23P * 109.50).toFixed(2);\r",
									"pm.environment.set('totalAmountA304SD', totalAmountA304SD);\r",
									"\r",
									"//==================================================================\r",
									"// Creating SKU 234234 \"Raspberry Pi B\" Test Data\r",
									"//==================================================================\r",
									"\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - 43N23P MacBookPro\r",
									"// item3 - A304SD Alexa Speaker\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"var mockedCartObj = {\r",
									"    \"cartId\":             randomCartId,\r",
									"    \"item1_id\":           1,\r",
									"    \"item1_sku\":          \"120P90\",\r",
									"    \"item1_quantity\":     randQuantity120P90,\r",
									"    \"item1_amountTotal\":  totalAmount120P90,\r",
									"    \"item2_id\":           2,\r",
									"    \"item2_sku\":          \"43N23P\",\r",
									"    \"item2_quantity\":     randQuantity43N23P,\r",
									"    \"item2_amountTotal\":  totalAmount43N23P,\r",
									"    \"item3_id\":           3,\r",
									"    \"item3_sku\":          \"A304SD\",\r",
									"    \"item3_quantity\":     randQuantityA304SD,\r",
									"    \"item3_amountTotal\":  totalAmountA304SD,\r",
									"    \"item4_id\":           4,\r",
									"    \"item4_sku\":          \"234234\",\r",
									"    \"item4_quantity\":     randQuantity43N23P,\r",
									"    \"item4_amountTotal\":  0.00\r",
									"}\r",
									"\r",
									"postman.setEnvironmentVariable('mockedCartObj', JSON.stringify(mockedCartObj));\r",
									"// var testObj = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"// console.log('mockedCartObj', testObj);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "112955b7-a0a1-4eea-870f-921eb9857b96",
								"exec": [
									"// Grab the JSON body\r",
									"var jsonData = pm.response.json();\r",
									"var responseData = jsonData.Result;\r",
									"var cartStatusData = jsonData.Result.cartStatus;\r",
									"var checkData = JSON.parse(pm.environment.get('mockedCartObj'));\r",
									"\r",
									"// ==========================================================\r",
									"// Special Case Validation\r",
									"// ==========================================================\r",
									"// item1 - 120P90 Google Home\r",
									"// item2 - 43N23P MacBookPro\r",
									"// item3 - A304SD Alexa Speaker\r",
									"// item4 - 234234 Raspbery Pi B\r",
									"\r",
									"// some variables to help determine the states\r",
									"var issueStatus\r",
									"\r",
									"// Google Home \r",
									"var numDeals = Math.floor(checkData.item1_quantity / 3);\r",
									"var priceReduction = (checkData.item1_amountTotal-(49.99*numDeals)).toFixed(2);\r",
									"checkData.item1_amountTotal = Number(priceReduction);\r",
									"\r",
									"// MacBook Pro\r",
									"checkData.item4_quantity = 2;\r",
									"\r",
									"\r",
									"// Alexa Speaker\r",
									"var discount = (checkData.item3_quantity > 3)? .9 : 1;\r",
									"var priceReduction = (checkData.item3_amountTotal*discount).toFixed(2);\r",
									"checkData.item3_amountTotal = Number(priceReduction);\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response CartStatus validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// issue\r",
									"var statusIssue = false;\r",
									"\r",
									"for(var index in cartStatusData.promotionsStatus) {\r",
									"    if(!cartStatusData.promotionsStatus[index].applicationStatus) statusIssue=true;\r",
									"}\r",
									"\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.issue).to.eql(statusIssue);\r",
									"});\r",
									"\r",
									"// applicationSTatus\r",
									"pm.test(\"JSON body to have issue status\", function () {\r",
									"    pm.expect(cartStatusData.promotionsStatus[0].qualifiedPromotion).to.not.eql(undefined);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Header validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header('Content-Type', 'application/json; charset=utf-8');\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"// ==========================================================\r",
									"// ----------------------------------------------------------\r",
									"// Response Result validation:\r",
									"// ----------------------------------------------------------\r",
									"// ==========================================================\r",
									"\r",
									"// cartId\r",
									"pm.test(\"JSON body to have cartId value\", function () {\r",
									"    pm.expect(jsonData.Result.cartId).to.eql(checkData.cartId);\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item1 tests (SKU 120P90 \"Google Homes\")\r",
									"//==================================================================\r",
									"\r",
									"// item1_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[0].id).to.eql(checkData.item1_id);\r",
									"});\r",
									"\r",
									"// item1_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[0].sku).to.eql(checkData.item1_sku);\r",
									"});\r",
									"\r",
									"// item1_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[0].quantity).to.eql(checkData.item1_quantity);\r",
									"});\r",
									"\r",
									"// item1_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[0].amountTotal).to.eql(Number(checkData.item1_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item2 tests (SKU 43N23P \"MackBookPro\")\r",
									"//==================================================================\r",
									"\r",
									"// item2_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[1].id).to.eql(checkData.item2_id);\r",
									"});\r",
									"\r",
									"// item2_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[1].sku).to.eql(checkData.item2_sku);\r",
									"});\r",
									"\r",
									"// item2_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[1].quantity).to.eql(checkData.item2_quantity);\r",
									"});\r",
									"\r",
									"// item2_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[1].amountTotal).to.eql(Number(checkData.item2_amountTotal));\r",
									"});\r",
									"\r",
									"//==================================================================\r",
									"// item3 tests (SKU A304SD \"Alexa Speaker\") \r",
									"//==================================================================\r",
									"\r",
									"// item3_id\r",
									"pm.test(\"JSON body to have correct id\", function () {\r",
									"    pm.expect(responseData.contents[2].id).to.eql(checkData.item3_id);\r",
									"});\r",
									"\r",
									"// item3_sku\r",
									"pm.test(\"JSON body to have correct sku\", function () {\r",
									"    pm.expect(responseData.contents[2].sku).to.eql(checkData.item3_sku);\r",
									"});\r",
									"\r",
									"// item3_quantity\r",
									"pm.test(\"JSON body to have correct quantity\", function () {\r",
									"    pm.expect(responseData.contents[2].quantity).to.eql(checkData.item3_quantity);\r",
									"});\r",
									"\r",
									"// item3_amountTotal\r",
									"pm.test(\"JSON body to have correct amountTotal\", function () {\r",
									"    pm.expect(responseData.contents[2].amountTotal).to.eql(Number(checkData.item3_amountTotal));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"contents\": [\r\n        {\r\n            \"id\": 1,\r\n            \"sku\": \"120P90\",\r\n            \"quantity\": {{quantity120P90}},\r\n            \"amountTotal\": {{totalAmount120P90}}\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"sku\": \"43N23P\",\r\n            \"quantity\": {{quantity43N23P}},\r\n            \"amountTotal\": {{totalAmount43N23P}}\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"sku\": \"A304SD\",\r\n            \"quantity\": {{quantityA304SD}},\r\n            \"amountTotal\": {{totalAmountA304SD}}\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bcs_endpoint}}/applyPromotions",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"applyPromotions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Raspberry Pi B inventory back to 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c75d7eb2-ebc6-45d6-ba76-0e94d7b6756c",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DB Interactions",
			"item": [
				{
					"name": "getItemInfo - Manually Choose and Set",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "20c6c90b-6c6b-4726-b82f-496a52a2c59f",
								"exec": [
									"//==================================================================\r",
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//  NOTE:  The value can be set manually or using the randomly generated\r",
									"//  value for testing.  \r",
									"//  - Simply comment out the value that you do not want to use\r",
									"//\r",
									"// -----------------------------------------------------------------\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '43N23P'\r",
									"pm.environment.set('sku', manualSku);\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"// Picking a random sku number\r",
									"var randomSku = randomEl(sku);\r",
									"// pm.environment.set('sku', randomSku);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/getItemQuantity/{{sku}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"getItemQuantity",
								"{{sku}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getItemInfo - Google Home db record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3a98509b-eba1-4044-9524-108cad2c73fe",
								"exec": [
									"//==================================================================\r",
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//  NOTE:  The value can be set manually or using the randomly generated\r",
									"//  value for testing.  \r",
									"//  - Simply comment out the value that you do not want to use\r",
									"//\r",
									"// -----------------------------------------------------------------\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '120P90'\r",
									"pm.environment.set('sku', manualSku);\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"// Picking a random sku number\r",
									"var randomSku = randomEl(sku);\r",
									"// pm.environment.set('sku', randomSku);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/getItemQuantity/{{sku}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"getItemQuantity",
								"{{sku}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getItemInfo - Alexa Speakers db record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8e2416e3-62ff-4a02-a591-bdd5ce9cde51",
								"exec": [
									"//==================================================================\r",
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//  NOTE:  The value can be set manually or using the randomly generated\r",
									"//  value for testing.  \r",
									"//  - Simply comment out the value that you do not want to use\r",
									"//\r",
									"// -----------------------------------------------------------------\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = 'A304SD'\r",
									"pm.environment.set('sku', manualSku);\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"// Picking a random sku number\r",
									"var randomSku = randomEl(sku);\r",
									"// pm.environment.set('sku', randomSku);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/getItemQuantity/{{sku}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"getItemQuantity",
								"{{sku}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getItemInfo - MacBook Pro db record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9efa36bc-71d9-400b-ad26-36d499e11707",
								"exec": [
									"//==================================================================\r",
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//  NOTE:  The value can be set manually or using the randomly generated\r",
									"//  value for testing.  \r",
									"//  - Simply comment out the value that you do not want to use\r",
									"//\r",
									"// -----------------------------------------------------------------\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '43N23P'\r",
									"pm.environment.set('sku', manualSku);\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"// Picking a random sku number\r",
									"var randomSku = randomEl(sku);\r",
									"// pm.environment.set('sku', randomSku);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/getItemQuantity/{{sku}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"getItemQuantity",
								"{{sku}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getItemInfo - Raspberry Pi B db record",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3d1a93d6-58e6-42ea-bf0b-f6b6ddb2abdf",
								"exec": [
									"//==================================================================\r",
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//  NOTE:  The value can be set manually or using the randomly generated\r",
									"//  value for testing.  \r",
									"//  - Simply comment out the value that you do not want to use\r",
									"//\r",
									"// -----------------------------------------------------------------\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '234234'\r",
									"pm.environment.set('sku', manualSku);\r",
									"\r",
									"//==================================================================\r",
									"// Pulling in or creating all of the functions needed in this test\r",
									"// - uuid library, random number and strings\r",
									"//==================================================================\r",
									"\r",
									"// Random string selector function (selects from defined lists)\r",
									"function randomEl(list) {\r",
									"    var i = Math.floor(Math.random() * list.length);\r",
									"    return list[i];\r",
									"}\r",
									"\r",
									"//----------------------------------------------------------------------------\r",
									"// Lists to use for selecting random product sku's\r",
									"//----------------------------------------------------------------------------\r",
									"var sku = [\"120P90\", \"43N23P\", \"A304SD\", \"234234\"];\r",
									"\r",
									"// Picking a random sku number\r",
									"var randomSku = randomEl(sku);\r",
									"// pm.environment.set('sku', randomSku);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/getItemQuantity/{{sku}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"getItemQuantity",
								"{{sku}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "adjustItemQuantity - Add 2 Alexa Speakers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8eaaf5fe-b0bc-4954-aa6f-a7eb5ff05d8a",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = 'A304SD'\r",
									"var manualAdjustment = 'plus'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "adjustItemQuantity - Minus 2 Alexa Speakers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9cff97bb-54e3-4e39-b404-fe8872e60a70",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = 'A304SD'\r",
									"var manualAdjustment = 'minus'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 2\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "adjustItemQuantity - Set Alexa Speakers to 4",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b7b84370-24f5-4253-a540-9f66ffc25697",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = 'A304SD'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 4\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "adjustItemQuantity - Set Alexa Speakers to 10",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a9c68eee-7e30-4893-a4c4-6ccd18006549",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = 'A304SD'\r",
									"var manualAdjustment = 'set'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 10\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?adjustment={{adjustment}}&quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "adjustment",
									"value": "{{adjustment}}"
								},
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "negTest - adjustItemQuantity missing 'adjustment' parameter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "325298d6-4db4-4d81-b458-f2dccac9fef4",
								"exec": [
									"// This endpoint is used to adjust quantity amounts in the Product\r",
									"// database\r",
									"//\r",
									"//    Sku      Item Name\r",
									"//  __________________________\r",
									"//  120P90   Google Home\r",
									"//  43N23P   MackBookPro\r",
									"//  A304SD   Alexa Speaker\r",
									"//  234234   Raspbery Pi B\r",
									"\r",
									"var manualSku = '120P90'\r",
									"var manualAdjustment = 'plus'   // valid options [ plus | minus ]\r",
									"var manualQuantity = 3\r",
									"\r",
									"pm.environment.set('sku', manualSku);\r",
									"pm.environment.set('adjustment', manualAdjustment);\r",
									"pm.environment.set('quantity', manualQuantity);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{bcs_endpoint}}/adjustItemQuantity/{{sku}}?quantity={{quantity}}",
							"host": [
								"{{bcs_endpoint}}"
							],
							"path": [
								"adjustItemQuantity",
								"{{sku}}"
							],
							"query": [
								{
									"key": "quantity",
									"value": "{{quantity}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9b9fb573-afcb-4a23-b78b-341293a9f72c",
				"type": "text/javascript",
				"exec": [
					"// bcs ==> backend-checkout-service",
					"var bcs_endpoint_to_test;",
					"",
					"switch (pm.variables.get(\"environment_to_test\")) {",
					"    case \"localhost\":",
					"        bcs_endpoint_to_test = \"localhost:3000/local/v1/cart\";",
					"        break;",
					"    case \"dev\":",
					"        bcs_endpoint_to_test = \"https:/\";",
					"        break;",
					"    default:",
					"        console.log(\"***** TEST PROBLEM!!!!! No valid environment was set in the collection pre-request scripts\");",
					"}",
					"postman.setEnvironmentVariable(\"bcs_endpoint\", bcs_endpoint_to_test);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a18c5763-1206-436c-90c2-afdc24865c6a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "3dbeb4f2-56d5-4c9f-91c4-a45e08f43d4c",
			"key": "environment_to_test",
			"value": "localhost"
		}
	],
	"protocolProfileBehavior": {}
}